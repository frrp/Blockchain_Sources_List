## Programming Blockchain Reading List and Projects

* The goal of this document is to provide a reading list for learning to program Blockchain systems as well as the crucial code
* It is not meant to be comprehensive, it lists only the most useful sources

The document is split into two major sections: [Content](#content) and [Code](#code)

* The Content section contains a reading list of mostly technical documents for Blockchain development
* The Code section contains a list of open-source blockchain and bitcoin projects 
* WIP: send suggestions to [@FrantaPolach](https://twitter.com/FrantaPolach) or [open a GitHub issue](https://github.com/frrp/Blockchain_Sources_List/issues)

### <a name="content"></a>Content

#### Infrastructure
* [BigchainDB](https://www.bigchaindb.com/)
* [R3](http://www.r3cev.com/)
* [IPFS](https://ipfs.io/)

#### Papers
* [Original bitcoin paper](https://bitcoin.org/bitcoin.pdf) (Satoshi)

#### Specifications
* [BIP70: Payments Protocol](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) (Andresen)
* [Working with the Payments Protocol](https://code.google.com/p/bitcoinj/wiki/PaymentProtocol) (Andresen)
* [BIP32: Hierarchical Deterministic (HD) Wallets](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki) (Wuille)
* [BIP32 Implementation: Money Tree HD Wallet](https://github.com/BitVault/money-tree) (BitVault)
* [Deterministic Wallet](https://en.bitcoin.it/wiki/Deterministic_wallet)
* [Transactions Reference](https://en.bitcoin.it/wiki/Transactions)
* [Script Reference](https://en.bitcoin.it/wiki/Script)
* [Raw Transactions API](https://en.bitcoin.it/wiki/Raw_Transactions)
* [Colored Coins Protocol Specification](https://github.com/Flavien/colored-coins-protocol/blob/master/specification.mediawiki) (Flavien)
* [The Mastercoin Protocol Specification](https://github.com/mastercoin-MSC/spec) (Gross)

#### Analytics
* [Numisight](http://numisight.com/)
* [Bitcoinity](http://data.bitcoinity.org)

<!---
-->

### <a name="code"></a>Code

#### Core Infrastructure
* [R3 Corda](https://www.r3cev.com/blog/2016/11/25/countdown-to-corda-open-source) `Java` (R3) 
* [Hyperledger Fabric](https://github.com/hyperledger/fabric) `Go` (Hyperledger) 
* [Sawtooth Lake Distributed ledger](https://github.com/hyperledger/sawtooth-core) `python` (Hyperledger)
* [BigchainDB](https://github.com/bigchaindb/bigchaindb) `python` (BigchainDB)

#### Original Bitcoin
* [bitcoin](https://github.com/bitcoin/bitcoin) `C++` (Satoshi) 
* [bitcoinj: Java implementation of a Bitcoin client-only node](https://code.google.com/p/bitcoinj/) `Java` (bitcoinj)
* [bitcoin-qt: Qt GUI for C++ Bitcoin client](https://github.com/laanwj/bitcoin-qt) `C++` (laanwj)
* [btcd: alternative full node bitcoin implementation written in Go](https://github.com/conformal/btcd) `Go` (conformal)

#### Tools
* [bitcointools: python-based tools for the Bitcoin cryptocurrency system](https://github.com/gavinandresen/bitcointools) `python` (gavinandresen)
* [pycoin: python-based Bitcoin utility library.](https://github.com/richardkiss/pycoin) `python` (richardkiss)
* [bitcoin-testnet-box: Create a private, difficulty 1 bitcoin testnet](https://github.com/freewil/bitcoin-testnet-Box) `Shell` (freewil)
* [transactions: Bitcoin for humans](https://github.com/ascribe/transactions) `python` (ascribe)
* [Blockstack: Decentralized DNS for Blockchain Applications](https://github.com/blockstack) (blockstack)

#### Block Exploration
* [bitcoin-abe: Abe: block browser for Bitcoin and similar currencies](https://github.com/jtobey/bitcoin-abe) `python` (jtobey)
* [insight: A bitcoin blockchain API for web wallets](https://github.com/bitpay/insight) `JavaScript` (bitpay)
* [node-bitcoin-explorer: A Block Explorer clone built using node-bitcoin-p2p](https://github.com/bitcoinjs/node-bitcoin-explorer) `JavaScript` (bitcoinjs)
* [BTCplex](https://github.com/tsileo/btcplex) `Go` (tsileo)
* [blockparser: Fast, quick and dirty bitcoin blockchain parser](https://github.com/znort987/blockparser) `C++` (znort987)
* [blockchain-explorer](https://github.com/hyperledger/blockchain-explorer) `JavaScript` (hyperledger-explorer)

#### Related Protocols
* [bitid: Bitcoin Authentication Open Protocol](https://github.com/bitid/bitid) (Larch)

#### BONUS: Bitcoin algorithmic trading
* [Bitcoin arbitrage: opportunity detector](https://github.com/maxme/bitcoin-arbitrage) `python` (maxme)
* [gekko: A bitcoin trading bot](https://github.com/askmike/gekko) `Node.js` (askmike)
* [Redbit: Automated Bitcoin Trading Bot](https://github.com/hyppo/Redbit) `python` (hyppo)
* [ArBit: An automated Bitcoin arbitrage trading program.](https://github.com/goteppo/ArBit) `Go` (goteppo)
* [cryptrade: Node.js Bitcoin bot for Bitstamp/BTC-E/CEX.IO](https://github.com/pulsecat/cryptrade) `CoffeeScript` (pulsecat)
* [ga-bitbot: Genetic algorithm trade system for bitcoin](https://code.google.com/p/ga-bitbot/) `python` 
* [Algo execution engine](https://github.com/joequant/algobroker) `python` (joequant)
* [Python Algorithmic Trading Library](https://github.com/gbeced/pyalgotrade) `python` (gbeced)
* [BitMex market maker](https://github.com/BitMEX/sample-market-maker) `python` (BitMEX)

